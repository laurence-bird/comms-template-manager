version: 2
jobs:
  build:
    working_directory: ~/comms-template-manager

    # With the docker executor we cannot connect to the docker container from the test
    machine:
      image: circleci/classic:edge

    environment:
      - CHROME_DRIVER_PATH: "/usr/local/bin/chromedriver"
    steps:

      - checkout

      - restore_cache:
          keys:
            - "{{ .Environment.CIRCLE_PROJECT_REPONAME }}-credstash"

      - run:
          name: Install python-dev, pip
          command: sudo apt-get update && sudo apt-get install -y libpython2.7-dev python-pip

      - run:
          name: Install credstash
          command: sudo pip install credstash

      - run:
          name: Logn to AWS as circleci seems to ignore the setting
          command: |
            mkdir ~/.aws
            echo "[default]" >> ~/.aws/credentials
            echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
            echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials


      - save_cache:
          key: "{{ .Environment.CIRCLE_PROJECT_REPONAME }}-credstash"
          paths:
            - /home/circleci/.cache/pip

      - restore_cache:
          keys:
            - "{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Branch }}"
            - "{{ .Environment.CIRCLE_PROJECT_REPONAME }}-master"
      - run:
          command: sbt test:compile
          no_output_timeout: 20m

      - save_cache:
          key: "{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Branch }}"
          paths:
            - /home/circleci/.ivy2
            - /home/circleci/.sbt
            - /home/circleci/.coursier
            - project/target/resolution-cache
            - target/resolution-cache
            # TODO docker image cache?
      - run: sbt test
      - run:
          name: Run servicetest
          command: "sbt dockerComposeTest"
          no_output_timeout: 20m

      - store_artifacts:
          path: /home/circleci/comms-template-manager/target/integration-test-logs

      - deploy:
          name: Deploy if master branch
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" -a "${CIRCLE_PROJECT_USERNAME}" == "ovotech" ]; then
              git clone git@github.com:ovotech/comms-ci-scripts
              comms-ci-scripts/publish_docker_image.sh
              comms-ci-scripts/deploy_to_ecs.sh -s template-manager PRD aws/container-definition.json
              comms-ci-scripts/send_librato_deployment_event.sh
              comms-ci-scripts/comment_on_last_merged_pr.sh
              comms-ci-scripts/notify_shipit.sh
            fi

experimental:
  notify:
    branches:
      only:
        - master
